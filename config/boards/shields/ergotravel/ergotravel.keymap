/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define RAISE 1
#define BLUETOOTH 2

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
    bindings = <
&kp TAB        &kp Q    &kp W     &kp E  &kp R &kp T     &kp LBKT        &kp RBKT  &kp Y     &kp U &kp I     &kp O    &kp P    &kp BSLH 
&mt LCTRL ESC  &kp A    &kp S     &kp D  &kp F &kp G     &kp MINUS       &kp EQUAL &kp H     &kp J &kp K     &kp L    &kp SEMI &kp SINGLE_QUOTE 
&mt LSHFT LPAR &kp Z    &kp X     &kp C  &kp V &kp B     &kp ESC         &kp ENTER &kp N     &kp M &kp COMMA &kp DOT  &kp FSLH &mt RSHFT RPAR
&mo BLUETOOTH  &kp LGUI &kp LALT  &mo RAISE    &mo RAISE &kp BSPC        &kp SPC   &mo RAISE       &kp LEFT  &kp DOWN &kp UP   &kp RIGHT
>;
		};

    raise_layer {
    bindings = <
&trans    &kp N1   &kp N2 &kp N3   &kp N4   &kp N5    &kp C_PREV         &kp C_NEXT       &kp N6    &kp N7   &kp N8     &kp N9   &kp N0   &trans
&kp GRAVE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT &kp C_VOL_DN       &kp C_VOL_UP     &kp CARET &kp AMPS &kp STAR   &kp LPAR &kp RPAR &trans 
&trans    &trans   &trans &trans   &trans   &trans    &kp C_MUTE         &trans           &trans    &trans   &trans     &trans   &trans   &trans
&trans    &trans   &trans &trans            &trans    &trans             &kp C_PLAY_PAUSE &trans             &trans     &trans   &trans   &trans
>;
    };

  bluetooth_layer {
    bindings = <
&bt BT_SEL 0 &trans &trans &trans &trans &trans &trans              &trans &trans &trans &trans &trans &trans &out OUT_USB
&bt BT_SEL 1 &trans &trans &trans &trans &trans &trans              &trans &trans &trans &trans &trans &trans &out OUT_BLE
&bt BT_SEL 2 &trans &trans &trans &trans &trans &bt BT_CLR          &trans &trans &trans &trans &trans &trans &trans
&trans       &trans &trans &trans        &trans &trans              &trans &trans        &trans &trans &trans &trans
>;
    };
	};
};
